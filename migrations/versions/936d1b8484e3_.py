"""empty message

Revision ID: 936d1b8484e3
Revises: d52046a5736e
Create Date: 2024-10-07 16:12:23.095157

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '936d1b8484e3'
down_revision = 'd52046a5736e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch_cr', sa.String(length=50), nullable=False),
    sa.Column('branch_address', sa.String(length=50), nullable=False),
    sa.Column('branch_zone', sa.String(length=50), nullable=False),
    sa.Column('branch_subzone', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('branch_cr')
    )
    op.create_table('provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=50), nullable=False),
    sa.Column('rfc', sa.String(length=30), nullable=False),
    sa.Column('service', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rfc')
    )
    op.create_table('migration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('installation_date', sa.Date(), nullable=False),
    sa.Column('migration_date', sa.Date(), nullable=False),
    sa.Column('migration_description', sa.String(length=250), nullable=False),
    sa.Column('migration_status', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_type', sa.String(length=50), nullable=False),
    sa.Column('asset_brand', sa.String(length=50), nullable=False),
    sa.Column('asset_model', sa.String(length=50), nullable=False),
    sa.Column('asset_serial', sa.String(length=50), nullable=False),
    sa.Column('asset_inventory_number', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('migration_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['migration_id'], ['migration.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_mb',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_name_MB', sa.String(length=30), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('names', sa.String(length=50), nullable=False),
    sa.Column('last_names', sa.String(length=50), nullable=False),
    sa.Column('employee_number', sa.String(length=20), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_number'),
    sa.UniqueConstraint('user_name_MB')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_name', sa.String(length=30), nullable=False))
        batch_op.add_column(sa.Column('names', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('last_names', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('employee_number', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('subzone', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('role', sa.String(length=50), nullable=False))
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=180),
               existing_nullable=False)
        batch_op.drop_constraint('user_email_key', type_='unique')
        batch_op.create_unique_constraint(None, ['user_name'])
        batch_op.create_unique_constraint(None, ['employee_number'])
        batch_op.drop_column('email')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('user_email_key', ['email'])
        batch_op.alter_column('password',
               existing_type=sa.String(length=180),
               type_=sa.VARCHAR(length=80),
               existing_nullable=False)
        batch_op.drop_column('role')
        batch_op.drop_column('subzone')
        batch_op.drop_column('employee_number')
        batch_op.drop_column('last_names')
        batch_op.drop_column('names')
        batch_op.drop_column('user_name')

    op.drop_table('user_mb')
    op.drop_table('assets')
    op.drop_table('migration')
    op.drop_table('provider')
    op.drop_table('branch')
    # ### end Alembic commands ###
